package top.controller;

import java.io.IOException;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import msg.Msg;
import top.model.Client;

@Controller//@Controller 어노테이션
public class ClientManageController {
	@RequestMapping("/main.top")// main.top로 연결하면 여기로 간다.
	public ModelAndView viewMain(ModelAndView mv) {
		mv.setViewName("main");
		return mv;
	}

	@RequestMapping("/webclient.top")
	public void changeState(HttpServletRequest req, HttpServletResponse res) {
		Client client = null;
		try {
			client = new Client("192.168.0.5", 8888);
			String ServerIp = "192.168.0.5";
			Msg msg = new Msg(ServerIp, null);
		} catch (IOException e) {
			e.printStackTrace();
		}
		String tid = req.getParameter("ip");
		String txt = req.getParameter("state");

		System.out.println(tid + "--------servletCheck-------" + txt);
		Msg msg = new Msg("fromservlet", txt, tid);
		client.startClient(msg);

		try {
			res.sendRedirect("main.top");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/iotclient.top")
	public void sendNotiFromIoTClient(HttpServletRequest req, HttpServletResponse res) {
		// 주소에다가 
		String id = req.getParameter("id");
		String txt = req.getParameter("txt");
		if (Integer.parseInt(txt) >= 50) {
			try {
				res.sendRedirect("sendnotitoclient.top?id=" + id + "&txt=" + txt);// 여기로 리다이렉트 한다. 
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		URL url;
		try {
			System.out.println("hahah");
			url = new URL("https://fcm.googleapis.com/fcm/send");
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setUseCaches(false);
			conn.setDoInput(true);
			conn.setDoOutput(true);
			conn.setRequestProperty("Authorization", "key="+ "AAAAZ5QtaP8:APA91bEsHwR9cnY3dBxPoPi84Mdh06BLrAAVjZQYnESJz5Tk7XjXDfLvC-AbsVAvyH3-YUr-cVVZVZPzNp8FAb80WTgb8zGrq728J93x4glDaIVzzYPyUGmEqC-DkLUlLn5nw6RD7lH_");
			conn.setRequestProperty("Content-Type", "application/json");

			JSONObject json = new JSONObject();
			json.put("to", "dCGsoR5obb0:APA91bHMpo_vrTyL7S9wre9ILl9HXnHj4SlHuK6ckai18PncpR1luGrHQgTzBw2Yq4qxwm3YPA0wYJIMXGgzTCOE4LGiFuErD2rBId-rMGK-V9DZWZN-5gCGzC0GPJ7ygss5lzJb1uTs");
			JSONObject info = new JSONObject();
			info.put("title", id);
			info.put("body", txt);
			json.put("notification", info);

			OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream());
			out.write(json.toString());
			out.flush();
			conn.getInputStream();//이거는 나중에 보낸 곳에서 수신 할 경우를 위하여 
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@RequestMapping("/sendnotitoclient.top")
	public void sendNotiFromManager(HttpServletRequest req) {
		String id = req.getParameter("id");
		String txt = req.getParameter("txt");
		
		URL url;
		

		try {
			url = new URL("https://fcm.googleapis.com/fcm/send");
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setUseCaches(false);
			conn.setDoInput(true);
			conn.setDoOutput(true);

			conn.setRequestProperty("Authorization", "key="
					+ "AAAAVdP8m2Q:APA91bEBunCsGlFxxvUpSebrMvCsChSic-hCVKSwRipRB84Whar5gJNafydQc_PQSP6JLfflxeynTJ8zHO2ZJM2M_WZcrZPYIHMYpPgqah7xS7-wpU-ES5iG3RCYnGdkp6X_Eu5VboJ_");
			conn.setRequestProperty("Content-Type", "application/json");

			JSONObject message = new JSONObject();
			
			message.put("to","/topics/temperature");
			message.put("priority", "high");
			
			JSONObject notification = new JSONObject();
			notification.put("title", id);
			notification.put("body", "WARNING! 온도가 50도 이상 입니다. 서버에 받은 값 : "+ txt);

			message.put("notification", notification);

			OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream());
			out.write(message.toString());
			out.flush();
			conn.getInputStream();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
